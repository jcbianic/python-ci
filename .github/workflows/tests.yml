name: Tests
on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]

jobs:
    pre-commit:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repository 💾
              uses: actions/checkout@v3

            - name: Install poetry
              run: pipx install poetry

            - name: Set up Python 🐍
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10.6"
                  cache: "poetry"

            - name: Cache Pre-Commit ⛄
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pre-commit
                  key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-precommit-

            - name: Install Dev Packages 🔧
              run: |
                  poetry env use 3.10.6
                  poetry install --only dev
                  poetry env info

            - name: Run Pre-Commit 🚦
              uses: pre-commit/action@v3.0.0

    tests:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repository 💾
              uses: actions/checkout@v3

            - name: Install poetry
              run: pipx install poetry

            - name: Set up Python 🐍
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10.6"
                  cache: "poetry"

            - name: Install Poetry 🔧
              run: |
                  pipx install poetry
                  poetry --version
              if: steps.cache-poetry.outputs.cache-hit != 'true'

            - name: Install Packages 🔧
              run: |
                  poetry config virtualenvs.in-project true
                  poetry config virtualenvs.path ~/.venv
                  poetry env use 3.10.6
                  poetry install
              if: steps.cache-packages.outputs.cache-hit != 'true'

            - name: Run Pytest 🚦
              run: |
                  poetry run python -m pytest tests --disable-warnings
