name: Tests
on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]

jobs:
    pre-commit:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repository 💾
              uses: actions/checkout@v3

            - name: Set up Python 🐍
              id: setup-python
              uses: actions/setup-python@v4
              with:
                  python-version-file: '.python-version'

            - uses: actions/cache@v3
              id: cache-python-install
              with:
                path: ${{ env.pythonLocation }}
                key: ${{ env.pythonLocation }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
                restore-keys: |
                  ${{ env.pythonLocation }}-${{ runner.os }}-

            - name: Cache Requirements.txt
              id: cache-requirements
              uses: actions/cache@v3
              with:
                  path: requirements.txt
                  key: ${{ runner.os }}-requirements.txt-${{ hashFiles('poetry.lock') }}

            - name: Install poetry
              if: steps.cache-requirements.outputs.cache-hit != 'true'
              run: |
                pipx install poetry
                poetry env use ${{ steps.setup-python.outputs.python-version }}

            - name: Generate requirements.txt
              if: steps.cache-requirements.outputs.cache-hit != 'true'
              run: |
                poetry export --without-hashes --format=requirements.txt --with dev > requirements.txt

            - name: Cache Pre-Commit ⛄
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pre-commit
                  key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-precommit-

            - name: Install Dev Packages 🔧
              if: steps.cache-python-install.outputs.cache-hit != 'true'
              run: |
                  pip install -r requirements.txt

            - name: Run Pre-Commit 🚦
              run: |
                pre-commit run --all-files --show-diff-on-failure
              shell: bash

    tests:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repository 💾
              uses: actions/checkout@v3

            - name: Set up Python 🐍
              id: setup-python
              uses: actions/setup-python@v4
              with:
                  python-version-file: '.python-version'
                  cache-dependency-path: poetry.lock
                  cache: "pip"

            - uses: actions/cache@v3
              id: cache-python-install
              with:
                path: ${{ env.pythonLocation }}
                key: ${{ env.pythonLocation }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

            - name: Cache Requirements.txt
              id: cache-requirements
              uses: actions/cache@v3
              with:
                  path: requirements.txt
                  key: ${{ runner.os }}-requirements.txt-${{ hashFiles('poetry.lock') }}

            - name: Install poetry
              if: steps.cache-requirements.outputs.cache-hit != 'true'
              run: |
                pipx install poetry
                poetry env use ${{ steps.setup-python.outputs.python-version }}

            - name: Generate requirements.txt
              if: steps.cache-requirements.outputs.cache-hit != 'true'
              run: |
                poetry export --without-hashes --format=requirements.txt --with dev > requirements.txt

            - name: Install Dev Packages 🔧
              if: steps.cache-python-install.outputs.cache-hit != 'true'
              run: |
                  pip install -r requirements.txt

            - name: Run Pytest 🚦
              run: |
                  python -m pytest tests --disable-warnings
